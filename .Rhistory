fadi<-read.csv("D:\Fadi\Education\Springboard\3- Data Wrangling\6- Project Data Wrangling Exercise 3 Human Activity Recognition\getdata%2Fprojectfiles%2FUCI HAR Dataset\UCI HAR Dataset\X_test.txt")
fadi
fadi<-read.csv(file="D:\Fadi\Education\Springboard\3- Data Wrangling\6- Project Data Wrangling Exercise 3 Human Activity Recognition\getdata%2Fprojectfiles%2FUCI HAR Dataset\UCI HAR Dataset\X_test.txt")
fadi<-read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/X_test.txt")
fadi<-read.csv(file="D:\Fadi\Education\Springboard\3- Data Wrangling\6- Project Data Wrangling Exercise 3 Human Activity Recognition\getdata%2Fprojectfiles%2FUCI HAR Dataset\UCI HAR Dataset\testX_test.txt")
fadi<-read.csv(file="D:\X_test.txt")
fadi<-read.csv(file="D:/X_test.txt")
fadi<-read.csv(file="D:/X_test.txt")
fadi
class(fadi)
fadi<-read.csv(file="D:/X_test.txt")
fadi<-read.csv(file="D:\X_test.txt")
x_test<-read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/testX.txt")
x_test<-read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/test/X_test.txt")
class(x_test)
help("read.csv")
x_test_names<-read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/test/y_test.txt",)
x_test_names
read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/test/Inertial Signals/body_acc_x_test.txt",)
View(read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/test/Inertial Signals/body_acc_x_test.txt",))
fadi<-(read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/test/Inertial Signals/body_acc_x_test.txt",))
fadi
fadi
count(fadi)
x_test_names
count(x_test_names)
x_test
x_test_names > NULL
x_test_names
rm(x_test_names)
x_test_names
activity_lable<- read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/activity_labels.txt",)
activity_lable
y_test<-read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/test/y_test.txt",)
y_test
class(y_test)
y_test[2]
y_test[1]
y_test[1,1]
count(x_test)
y_test<-read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/test/y_test.txt",col.names = Test_Label)
y_test<-read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/test/y_test.txt",col.names = "Test_Label")
y_test[1,1]
y_test
y_test$Test_Label
activity_lable
activity_lable[1]
activity_lable<- read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/activity_labels.txt",sep = " ")
activity_lable[1]
activity_lable<- read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/activity_labels.txt",sep = " ")
activity_lable
activity_lable[1,1]
activity_lable<- read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/activity_labels.txt",sep = " ",col.names = c("Test_Lable_No","Test_Label"))
activity_lable[1,1]
activity_lable<- read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/activity_labels.txt",header = FALSE,sep = " ",col.names = c("Test_Lable_No","Test_Label"))
activity_lable[1,1]
activity_lable
x_test<-read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/test/X_test.txt",header = FALSE)
y_test<-read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/test/y_test.txt",header = FALSE,col.names = "Test_Label_No")
y_test[1:10]
y_test[,10]
y_test
y_test[1,10]
y_test[10,1]
y_test[10]
y_test[1,1:10]
y_test[1,1]
y_test[1:10,1]
y_test[1:30,1]
y_test[1:50,1]
left_join(y_test,activity_lable,by = Test_Lable_No)
activity_lable
left_join(y_test,activity_lable,by = "Test_Lable_No")
View(y_test)
left_join(y_test,activity_lable,by = "Test_Lable_No")
activity_lable
rm(fadi)
library(dplyr)
x_test<-read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/test/X_test.txt",header = FALSE)
y_test<-read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/test/y_test.txt",header = FALSE,col.names = "Test_Lable_No")
View(y_test)
activity_lable<- read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/activity_labels.txt",header = FALSE,sep = " ",col.names = c("Test_Lable_No","Test_Label"))
activity_lable
left_join(y_test,activity_lable,by = "Test_Lable_No")
y_test<-read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/test/y_test.txt",header = FALSE,col.names = "ActivityLable")
activity_lable<- read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/activity_labels.txt",header = FALSE,sep = " ",col.names = c("ActivityLable","ActivityName"))
left_join(y_test,activity_lable,by = "Test_Lable_No")
library(dplyr)
x_test<-read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/test/X_test.txt",header = FALSE)
y_test<-read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/test/y_test.txt",header = FALSE,col.names = "ActivityLable")
activity_lable<- read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/activity_labels.txt",header = FALSE,sep = " ",col.names = c("ActivityLable","ActivityName"))
left_join(y_test,activity_lable,by = "Test_Lable_No")
left_join(y_test,activity_lable,by = "ActivityLable")
features <- read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/features.txt",header = FALSE,sep = " ")
features
features <- read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/features.txt",header = FALSE,sep = " ",col.names = c("FeatureNo","FeatureName"))
features
x_test<-read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/test/X_test.txt",header = FALSE,col.names = c(features$FeatureName))
x_test
View(x_test)
features
x_test<-read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/test/X_test.txt",header = FALSE)
View(x_test)
x_test<-read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/test/X_test.txt",header = FALSE,sep = " ")
View(x_test)
features
library(dplyr)
#read activities file
activity_lable<- read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/activity_labels.txt",header = FALSE,sep = " ",col.names = c("ActivityLable","ActivityName"))
#read features file
features <- read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/features.txt",header = FALSE,sep = " ",col.names = c("FeatureNo","FeatureName"))
#read y test file and add activity name to the table
y_test<-read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/test/y_test.txt",header = FALSE,col.names = "ActivityLable")
y_test<-left_join(y_test,activity_lable,by = "ActivityLable")
features
#read x test file and use feature name column as a columns
x_test<-read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/test/X_test.txt", header = FALSE,sep = "", col.names = c(features$FeatureName))
View(x_test)
features
library(dplyr)
#read activities file
activity_lable<- read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/activity_labels.txt",header = FALSE,sep = " ",col.names = c("ActivityLable","ActivityName"))
#read features file
features <- read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/features.txt",header = FALSE,sep = " ",col.names = c("FeatureNo","FeatureName"))
#read y test file and add activity name to the table
y_test<-read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/test/y_test.txt",header = FALSE,col.names = "ActivityLable")
y_test<-left_join(y_test,activity_lable,by = "ActivityLable")
features
#read x test file and use feature name column as a columns
x_test<-read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/test/X_test.txt", header = FALSE,sep = "", col.names = features$FeatureName)
View(x_test)
count(unique(features))
count(features)
unique(features)
filter(features,stringr::str_detect(FeatureName,"mean") == TRUE)
library(dplyr)
#read activities file
activity_lable<- read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/activity_labels.txt",header = FALSE,sep = " ",col.names = c("ActivityLable","ActivityName"))
#read features file
features <- read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/features.txt",header = FALSE,sep = " ",col.names = c("FeatureNo","FeatureName"))
#read y test file and add activity name to the table
y_test<-read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/test/y_test.txt",header = FALSE,col.names = "ActivityLable")
y_test<-left_join(y_test,activity_lable,by = "ActivityLable")
y_train<-read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/train/y_train.txt",header = FALSE,col.names = "ActivityLable")
y_train<-left_join(y_train,activity_lable,by = "ActivityLable")
#read x test file and use feature name column as a columns
x_test<-read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/test/X_test.txt", header = FALSE,sep = "", col.names = features$FeatureName)
x_train<-read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/train/X_train.txt", header = FALSE,sep = "", col.names = features$FeatureName)
View(x_test)
View(x_test)
View(x_test)
View(x_train)
bind_cols(y_test,x_test)
View(bind_cols(y_test,x_test))
library(dplyr)
#read activities file
activity_lable<- read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/activity_labels.txt",header = FALSE,sep = " ",col.names = c("ActivityLable","ActivityName"))
#read features file
features <- read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/features.txt",header = FALSE,sep = " ",col.names = c("FeatureNo","FeatureName"))
#read y test file and add activity name to the table
y_test<-read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/test/y_test.txt",header = FALSE,col.names = "ActivityLable")
y_test<-left_join(y_test,activity_lable,by = "ActivityLable")
y_train<-read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/train/y_train.txt",header = FALSE,col.names = "ActivityLable")
y_train<-left_join(y_train,activity_lable,by = "ActivityLable")
#read x test file and use feature name column as a columns
x_test<-read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/test/X_test.txt", header = FALSE,sep = "", col.names = features$FeatureName)
x_train<-read.csv(file="D:/Fadi/Education/Springboard/3- Data Wrangling/6- Project Data Wrangling Exercise 3 Human Activity Recognition/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset/train/X_train.txt", header = FALSE,sep = "", col.names = features$FeatureName)
#adding activity no. and lable to the sets
x_test<- bind_cols(y_test,x_test)
x_train<- bind_cols(y_train,x_train)
X_set <- bind_rows(x_test,x_train)
View(X_set)
stringr::str_detect(features$FeatureName,"mean")
filter(feature,stringr::str_detect(features$FeatureName,"mean")==TRUE)
filter(feature,stringr::str_detect(features$FeatureName,"mean")=TRUE)
filter(feature,stringr::str_detect(features$FeatureName,"mean")==TRUE)
filter(features,stringr::str_detect(features$FeatureName,"mean")==TRUE)
filter(features$FeatureName,stringr::str_detect(features$FeatureName,"mean")==TRUE)
filter(features,stringr::str_detect(features$FeatureName,"mean")==TRUE)
features_vec <- c(features$FeatureName)
features_vec
help("make.names")
rm(features_vec)
filter(features,stringr::str_detect(features$FeatureName,"mean") == TRUE)
View(filter(features,stringr::str_detect(features$FeatureName,"mean") == TRUE))
mutate(filter(features,stringr::str_detect(features$FeatureName,"mean") == TRUE)),new = make.names(features$FeatureName))
mutate(features,new = make.names(features$FeatureName))
filter(features,stringr::str_detect(features$FeatureName,"mean") == TRUE))
View(X_set)
library(ggplot2)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
help(ggplot)
refine_or
refine_or
ggplot(refine_or, aes(x = company, y = product_number)) +
+   geom_point()
library(ggplot2)
refine_or
ggplot(refine_or, aes(x = company, y = product_number)) +
+   geom_point()
library(ggplot2)
refine_or
ggplot(refine_or, aes(x = company, y = product_number))  +   geom_point()
library(ggplot2)
refine_or
ggplot(refine_or, aes(x = company, y = product_number,shape = TRUE))  +   geom_point()
library(ggplot2)
refine_or
ggplot(refine_or, aes(x = company, y = product_number,shape = 1))  +   geom_point()
library(ggplot2)
refine_or
ggplot(refine_or, aes(x = company, y = product_number,shape = 3))  +   geom_point()
library(ggplot2)
refine_or
ggplot(refine_or, aes(x = company, y = product_number,shape = 23))  +   geom_point()
library(ggplot2)
refine_or
ggplot(refine_or, aes(x = company, y = product_number),shape = 23)  +   geom_point()
library(ggplot2)
refine_or
ggplot(refine_or, aes(x = company, y = product_number),shape = 36)  +   geom_point()
library(ggplot2)
refine_or
ggplot(refine_or, aes(x = company, y = product_number),shape = 120)  +   geom_point()
library(ggplot2)
refine_or
ggplot(refine_or, aes(x = company, y = product_number),shape = 120)  +   geom_point() + geom_smooth()
help(lm)
help(geom_smooth)
help(geom_smooth)
library(ggplot2)
help(geom_smooth)
library(readr)
train <- read_csv("C:/Users/Fadi/Downloads/train/train.csv")
View(train)
str(train)
str(train)
unique(train)
unique(train$age)
count_fields(train)
count(unique(train$age))
unique(train$age)
count(unique(train$age))
count(1,2,3)
unique(train)
View(unique(train))
View(unique(train[1]))
View(unique(train[2]))
unique(train[2])
unique(train[2])
unique(train[3])
unique(train[4])
count(train,vars="age")
library(dplyr)
dplyr::summarise(train,nage = n_distinct(age))
n_distinct(train$age)
n_distinct(train)
for (i in 1:41) {
n_distinct(train[i])
}
for (i in 1:41) {
print(n_distinct(train[i]))
}
for (i in 1:41) {
print(train[i] + n_distinct(train[i]))
}
for (i in 1:41) {
print(train[i] +"-"+ n_distinct(train[i]))
}
for (i in 1:41) {
print(i +"-"+ n_distinct(train[i]))
}
for (i in 1:41) {
print(i || "-" || n_distinct(train[i]))
}
for (i in 1:41) {
print(n_distinct(train[i]))
}
for (i in 1:41) {
print(unique(train[i]))
}
n_distinct(train$dividend_from_Stocks)
for (i in 1:41) {
print(unique(train[i]))
}
for (i in 1:41) {
print(n_distinct(train[i]))
}
# titanic is avaliable in your workspace
# 1 - Check the structure of titanic
str(titanic)
# 2 - Use ggplot() for the first instruction
ggplot(titanic, aes(x = Pclass, fill = Sex)) +
geom_bar(position = "dodge")
# 3 - Plot 2, add facet_grid() layer
ggplot(titanic, aes(x = Pclass, fill = Sex)) +
geom_bar(position = "dodge")+
facet_grid(.~Survived)
# 4 - Define an object for position jitterdodge, to use below
posn.jd <- position_jitterdodge(0.5, 0, 0.6)
# 5 - Plot 3, but use the position object from instruction 4
ggplot(titanic, aes(x = Pclass, ,y=Age,color = Sex)) +
geom_point(position = posn.jd,size=3,alpha=0.5)+
facet_grid(.~Survived)
read.csv('NBA_train.csv')
library(readr)
read.csv('D/Fadi/Education/Springboard/6- An introduction to machine learning/NBA_train.csv')
library(readr)
read.csv("D/Fadi/Education/Springboard/6- An introduction to machine learning/NBA_train.csv")
library(readr)
NBA_train <- read_csv("D:/Fadi/Education/Springboard/6- An introduction to machine learning/NBA_train.csv")
View(NBA_train)
library(readr)
NBA_test <- read_csv("D:/Fadi/Education/Springboard/6- An introduction to machine learning/NBA_test.csv")
View(NBA_test)
library(readr)
NBA <- read.csv("D:/Fadi/Education/Springboard/6- An introduction to machine learning/NBA_train.csv")
NBA
str(NBA)
remove(NBA_test)
remove(NBA_train)
remove(NBA_train)
table(NBA$W, NBA$Playoffs)
NBA$PTSdiff <- NBA$PTS - NBA$oppPTS
library(ggplot2)
#lets check the relation between the new column and the wins
ggplot(NBA,x=PTSdiff,y=W) + geom_point()
#lets check the relation between the new column and the wins
ggplot(NBA,aes(x=PTSdiff,y=W)) + geom_point()
WinReg <- lm(W~PTSdiff, data = NBA)
summary(WinReg)
PointsReg <- lm(PTS~ X2PA + X3PA + FTA + AST + ORB + DRB + TOV + STL + BLK )
summary(PointsReg)
PointsReg <- lm(PTS~ X2PA + X3PA + FTA + AST + ORB + DRB + TOV + STL + BLK , data = NBA)
summary(PointsReg)
SSE <- sum(PointsReg$residuals)
SSE
SSE <- sum(PointsReg$residuals^2)
SSE
RMSE <- sqrt(SSE/nrow(NBA))
RMSE
mean(NBA$PTS)
PointsReg2 <- lm(PTS~ X2PA + X3PA + FTA + AST + ORB + STL , data = NBA)
summary(PointsReg2)
SSE2 <- sum(PointsReg2$residuals^2)
SSE2
RMSE <- sqrt(SSE2/nrow(NBA))
RMSE
mean(NBA$PTS) #not so bad but there is a room for improvement as we can take off some variables from the equation
library(readr)
library(ggplot2)
NBA <- read.csv("D:/Fadi/Education/Springboard/6- An introduction to machine learning/NBA_train.csv")
str(NBA)
# summary for wins and playoff
# this function make w as rows and playoffs values as a columns and the values in the tables is count
table(NBA$W, NBA$Playoffs)
#we can notie that after 42 wines teams almost always makes the playoffs
#adding column for the difference between points scored and allowed
NBA$PTSdiff <- NBA$PTS - NBA$oppPTS
#lets check the relation between the new column and the wins
ggplot(NBA,aes(x=PTSdiff,y=W)) + geom_point() #we can notice the strong relation here
WinReg <- lm(W~PTSdiff, data = NBA)
summary(WinReg)
# the formula here is W = 41 + 0.0326 PTSdiff and we want this equation to be more than 42
# so 42 <= 41 + 0.0326 PTSdiff then PTSdiff >= 42 - 41 / 0.0326 which is almost 31
#which means that PTSdiff more than 31 to make the playoffs
#point scored prediction
PointsReg <- lm(PTS~ X2PA + X3PA + FTA + AST + ORB + DRB + TOV + STL + BLK , data = NBA)
summary(PointsReg)
#we can see some of the variable are segnificant and some not, but over all we have very good R^2 value
# so we need to elemenate some of the variables
#let us see the residuals for the pointreg simply by calling it
PointsReg$residuals
#let us calculate the SSE (some of the squar errors)
SSE <- sum(PointsReg$residuals^2)
SSE #which is alot
RMSE <- sqrt(SSE/nrow(NBA))
RMSE #on average we make error about 184 point, now comparing it to the average of points
mean(NBA$PTS) #not so bad but there is a room for improvement as we can take off some variables from the equation
#we can take out the variable one by one and compare it to the previous model but i will take off all the variables with bad t value
PointsReg2 <- lm(PTS~ X2PA + X3PA + FTA + AST + ORB + STL , data = NBA)
summary(PointsReg2)
SSE2 <- sum(PointsReg2$residuals^2)
SSE2
RMSE2 <- sqrt(SSE2/nrow(NBA))
RMSE2
mean(NBA$PTS) #not so bad but there is a room for improvement as we can take off some variables from the equation
NBA_test <- read.csv("D:/Fadi/Education/Springboard/6- An introduction to machine learning/NBA_test.csv")
NBA_test
summary(PointsPredictions)
PointsPredictions <- predict(PointsReg2,newdata = NBA_test)
summary(PointsPredictions)
P_SSE <- sum((PointsPredictions - NBA_test$PTS)^2)
P_SST <- sum((mean(NBA$PTS) - NBA_test$PTS)^2)
P_R2 <- 1- (P_SSE/P_SST)
P_R2
P_RMSE <- sqrt(P_SSE/nrow(NBA_test))
P_RMSE
getwd()
setwd("D:/Fadi/Education/Springboard/6- An introduction to machine learning/Liner Reg Ex/linear_regression")
getwd() # where am I?
setwd("D:/Fadi/Education/Springboard/6- An introduction to machine learning/Liner Reg Ex/linear_regression/dataSets")
getwd() # where am I?
setwd("D:/Fadi/Education/Springboard/6- An introduction to machine learning/Liner Reg Ex/linear_regression")
list.files("dataSets") # files in the dataSets folder
states.data <- readRDS("dataSets/states.rds")
#get labels
states.info <- data.frame(attributes(states.data)[c("names", "var.labels")])
#look at last few labels
tail(states.info, 8)
str(states.data)
# summary of expense and csat columns, all rows
sts.ex.sat <- subset(states.data, select = c("expense", "csat"))
summary(sts.ex.sat)
# correlation between expense and csat
cor(sts.ex.sat)
## Plot the data before fitting models
## âââââââââââââââââââââââââââââââââââââââ
##   Plot the data to look for multivariate outliers, non-linear
##   relationships etc.
# scatter plot of expense vs csat
plot(sts.ex.sat)
## Linear regression example
## âââââââââââââââââââââââââââââ
##   â¢ Linear regression models can be fit with the `lm()' function
##   â¢ For example, we can use `lm' to predict SAT scores based on
##     per-pupal expenditures:
sat.mod <- lm(csat ~ expense, # regression formula
data=states.data) # data set
# Summarize and print the results
summary(sat.mod) # show regression coefficients table
summary(lm(csat ~ expense + percent, data = states.data))
tail(states.info, 8)
class(sat.mod)
names(sat.mod)
methods(class = class(sat.mod))[1:9]
confint(sat.mod)
par(mar = c(4, 4, 2, 2), mfrow = c(1, 2)) #optional
plot(sat.mod, which = c(1, 2)) # "which" argument optional
sat.voting.mod <-  lm(csat ~ expense + house + senate,
data = na.omit(states.data))
sat.mod <- update(sat.mod, data=na.omit(states.data))
# compare using the anova() function
anova(sat.mod, sat.voting.mod)
coef(summary(sat.voting.mod))
str(states.data)
states.info
View(states.data)
library(ggplot2)
ggplot(states.data,aes(x=metro,y=energy))+geom_point()
energy.model<- lm(energy~metro)
summary(energy.model)
energy.model<- lm(energy~metro, data=states.data)
summary(energy.model)
cor(states.data[3:21])
cor(states.data$energy,states.data$college)
cor(states.data$energy,states.data$high)
summary(energy.model)
states.info
energy.model1<- lm(energy~metro + area + waste + milestoxic + green, data=states.data)
summary(energy.model1)
energy.model1<- lm(energy~metro + area + waste + miles + toxic + green, data=states.data)
summary(energy.model1)
energy.model1<- lm(energy~metro + toxic + green, data=states.data)
summary(energy.model1)
energy.model1<- lm(energy~metro + area + waste + miles + toxic + green, data=states.data)
summary(energy.model1)
energy.model1<- lm(energy~metro + area + toxic + green, data=states.data)
summary(energy.model1)
energy.model1<- lm(energy~ + area + toxic + green, data=states.data)
summary(energy.model1)
s.data <- readRDS("dataSets/states.rds")
ggplot(s.data,aes(x=metro,y=energy))+geom_point()
energy.model<- lm(energy~metro, data=s.data)
summary(energy.model)
energy.model1<- lm(energy~metro + area + toxic + green, data=states.data)
summary(energy.model1)
energy.model1<- lm(energy~metro + area + toxic + green, data=s.data)
summary(energy.model1)
remove(s.data)
abline(energy.model)
abline(lm(energy~metro, data=states.data))
summary(energy.model)
summary(energy.model)
abline(501, -2.2)
ggplot(states.data,aes(x=metro,y=energy))+geom_point() +abline(501, -2.2)
ggplot(states.data,aes(x=metro,y=energy))+geom_point() +abline(lm(energy~metro, data=states.data))
ggplot(states.data,aes(x=metro,y=energy))+geom_point()
ggplot(states.data,aes(x=metro,y=area))+geom_point()
ggplot(states.data,aes(x=metro,y=toxic))+geom_point()
ggplot(states.data,aes(x=metro,y=green))+geom_point()
cor(states.data$green,states.data$toxic)
str(states.data)
states.data$energy !NULL
states.data$energy[!NULL]
filter(states.data, energy is NULL)
filter(states.data, energy = NULL)
filter(states.data, energy != NULL)
filter(states.data, "energy != NULL")
filter(states.data, states.data$energy != NULL)
filter(states.data, states.data$energy = NULL)
filter(states.data, states.data$energy == NULL)
filter(states.data, states.data$metro == NULL)
table(states.data$metro)
table(states.data$metro,states.data$energy)
states.data[metro == NULL]
states.data(metro == NULL)
ggplot(states.data,aes(x=metro,y=energy))+geom_point() +stat_smooth(method = "lm")
